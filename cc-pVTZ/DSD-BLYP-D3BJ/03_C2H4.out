
================================================================================
          _____________ ________ _______________ ________     _________         
         / ___________// ______ \\_____   _____// ______ \   / ________)        
        / /_________  / /      \ \     | |     / /      \ \ | (_______          
       |  __________|| |        | |    | |    | |        | | \________ \        
        \ \_________ | |        | |    | |     \ \______/ /___________) |       
         \__________||_|        |_|    |_|      \________//____________/        
                                                                                
====================================[ Qcore ]===================================

 Git hash:   15a3e7daff0cda5fa9af010ccd19a80288182ecf
 Git date:   Fri, 16 Apr 2021 15:57:16 +0100
 Compiler:   GNU 9.1.0
 Build type: Release
 Version:    1.1.0

 Start time: Fri Apr 23 14:42:44 2021

 Data directory: /work/zw18965/.local/qcore/share/entos/1.1.0/data
 Number of threads: 24
 Number of threads was determined by: command line argument
  - More threads can be used by running 'qcore -n 32'

 --------------------------------------------------------------------------------
                                command: optimize                                
 --------------------------------------------------------------------------------
 Using coordinate system:                tric
 Hessian update scheme:                  bfgs

 ------------------------------------------------------------------------------------------------------------
                   energy      change    grad rms    grad max    step rms    step max       trust    time (s)
 ------------------------------------------------------------------------------------------------------------
   1       -78.505160370                4.47e-03    1.28e-02                            2.00e-01        5.21
   2       -78.505297722   -1.37e-04    1.67e-03    4.70e-03    7.08e-03    1.17e-02    2.00e-01        4.86
   3       -78.505334865   -3.71e-05    1.29e-04    2.73e-04    8.47e-03    1.22e-02    2.00e-01        4.84
   4       -78.505335401   -5.35e-07    5.33e-05    1.36e-04    1.12e-03    1.24e-03    2.00e-01        4.79
   5       -78.505335438   -3.71e-08    3.04e-06    6.25e-06    2.79e-04    2.50e-04    2.00e-01        4.80
 Geometry optimization stopped:          thresholds achieved

 Final energy:                         -78.505335438

 -----------
  Final XYZ 
 -----------
6
Final structure: -78.5053 hartree
C           -0.661485508         -0.052456564         -0.000105424
C            0.661428907          0.052457537          0.000129448
H           -1.231502388          0.002407638         -0.915049507
H           -1.216048752         -0.196506450          0.914636083
H            1.215989700          0.196506047         -0.914612653
H            1.231448122         -0.002405979          0.915073289

 Structure in entos input format:

  structure(
    xyz = [
      ['C'  ,         -0.661485508,         -0.052456564,         -0.000105424],
      ['C'  ,          0.661428907,          0.052457537,          0.000129448],
      ['H'  ,         -1.231502388,          0.002407638,         -0.915049507],
      ['H'  ,         -1.216048752,         -0.196506450,          0.914636083],
      ['H'  ,          1.215989700,          0.196506047,         -0.914612653],
      ['H'  ,          1.231448122,         -0.002405979,          0.915073289]
    ]
  )

 --------------------------------
  Geometry optimization finished 
 --------------------------------
 Saving results in set 'opt'

 --------------------------------------------------------------------------------
                                 command: hessian                                
 --------------------------------------------------------------------------------

WARNING: numerical method is specified for dft hessian, which is not efficient. Try switching to 'method = analytic'


 -------------------------------
  Numerical Geometrical Hessian 
 -------------------------------

 Compute hessian using two-point central differentiation.
 Step size (bohr):                       0.0100

 Frequencies (including translational and rotational modes):
 mode    frequency (cm-1)
    0               11.40 i (imaginary)
    1                6.40 i (imaginary)
    2                2.24 i (imaginary)
    3                1.53
    4                5.67
    5               19.78
    6              837.85
    7              982.05
    8              991.69
    9             1079.85
   10             1258.74
   11             1392.89
   12             1495.60
   13             1699.50
   14             3175.51
   15             3192.00
   16             3255.76
   17             3282.97

 Project out translational and rotational motions 

 Degrees of freedom for translational and rotational motions: 6

 Vibrational frequencies:
 mode    frequency (cm-1)
    0              837.85
    1              982.05
    2              991.69
    3             1079.85
    4             1258.74
    5             1392.89
    6             1495.60
    7             1699.50
    8             3175.51
    9             3192.00
   10             3255.76
   11             3282.97

 --------------------------------------------------------------------------------

 End time:                               Fri Apr 23 14:46:39 2021
 Total wall-clock time:                234.962 seconds
==================================================================================
